# Задача 22: Даны два неупорядоченных набора целых чисел (может быть, с повторениями). 
# Выдать без повторений в порядке возрастания все те числа, которые встречаются в обоих наборах.
# Пользователь вводит 2 числа. n — кол-во элементов первого множества. m — кол-во элементов второго множества. 
# Затем пользователь вводит сами элементы множеств.
# first_mnog = []
# second_mnog = []
# i = j = 0
# n = int(input(' введите кол-во элементов первого множества'))
# m = int(input(' введите кол-во элементов второго множества'))
# while i < n:
#     first_mnog.append(int(input('введите элемент первого множества')))
#     i += 1
# while j < m:
#     second_mnog.append(int(input('введите элемент второго множества')))
#     j += 1
# print(first_mnog)
# print(second_mnog)
# set1 = set(first_mnog)
# set2 = set(second_mnog)
# print(set1, set2)
# set3 = set1.union(set2)
# print(set3)
# sort_list = list(set3)
# sort_list.sort()
# print(sort_list)



# Задача 24: В фермерском хозяйстве в Карелии выращивают чернику. Она растёт на круглой грядке, причём кусты высажены только по окружности. 
# Таким образом, у каждого куста есть ровно два соседних. Всего на грядке растёт N кустов.
# Эти кусты обладают разной урожайностью, поэтому ко времени сбора на них выросло различное число ягод — на i-ом кусте выросло a[i] ягод.
# В этом фермерском хозяйстве внедрена система автоматического сбора черники. 
# Эта система состоит из управляющего модуля и нескольких собирающих модулей. 
# Собирающий модуль за один заход, находясь непосредственно перед некоторым кустом, собирает ягоды с этого куста и с двух соседних с ним.
# Напишите программу для нахождения максимального числа ягод, которое может собрать за один заход собирающий модуль,
# находясь перед некоторым кустом заданной во входном списке урожайности грядки.

# chern = [2,4,8,7,6,9,5]
# chern_kg = []
# for i in range(1, len(chern)-1):
#     chern_kg.append(chern[i]+chern[i-1]+chern[i+1])
# print(chern)
# print(chern_kg)
# chern_kg_0 = chern[0] + chern[1] + chern[len(chern)-1]
# print(chern_kg_0)
# chern_kg_lust = chern[len(chern)-1] + chern[len(chern)-2] + chern[0]
# print(chern_kg_lust)

# chern_kg.insert(0, chern_kg_0)
# chern_kg.insert(len(chern)-1, chern_kg_lust)

# print(chern_kg)
# max = chern_kg[0]
# for j in range(len(chern_kg)):
#     if chern_kg[j] > max:
#         max = chern_kg[j]
#         z=j
# print(f'максимально модуль соберет на {z} позиции {max} кг')

